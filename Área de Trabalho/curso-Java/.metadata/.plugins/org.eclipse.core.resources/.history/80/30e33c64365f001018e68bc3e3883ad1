package br.com.ufrn.pds1.projetopds1.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import br.com.ufrn.pds1.projetopds1.exception.DadosInvalidosException;
import br.com.ufrn.pds1.projetopds1.model.PrevisaoTempo;

@Service
public class PrevisaoTempoEolicaService extends PrevisaoTempoServiceTemplate{
	//**********************************************************************************************************************
		//Constroi a URL
		@Override
		public String obterUrl(double latitude, double longitude, String dataNormalizada, String dataAtual) {
			
			return  String.format("https://archive-api.open-meteo.com/v1/archive"
					+ "?latitude=%s"
					+ "&longitude=%s"
					+ "&start_date=%s"
					+ "&end_date=%s"
					+ "&daily=temperature_2m_max,temperature_2m_min,windspeed_10m_max"
					+ "&timezone=America/Fortaleza",latitude, longitude, dataNormalizada, dataAtual);
			
			//muda
		}

		
	//************************************************************************************************************************
		public PrevisaoTempo instanciarPrevisaoDoTempo(double latitude, double longitude, Map<String, Object> dailyPrevisao) {
			//armazenando dados
			if (dailyPrevisao == null) {
				throw new DadosInvalidosException("Apresenta dados inv√°lidos");
			}
			
			PrevisaoTempo armazemDadosPrevisao = new PrevisaoTempo();
					
			armazemDadosPrevisao.setData((List<String>) dailyPrevisao.get("time"));
			armazemDadosPrevisao.setLocal("Latitude:" + latitude + "Longitude:" + longitude);
			armazemDadosPrevisao.setTempMax((List<Double>) dailyPrevisao.get("temperature_2m_max"));
			armazemDadosPrevisao.setTempMin((List<Double>) dailyPrevisao.get("temperature_2m_min"));
			armazemDadosPrevisao.setVelVento10m((List<Double>) dailyPrevisao.get("windspeed_10m_max"));
				
			return armazemDadosPrevisao;
			//muda
		}	
		

	
}
