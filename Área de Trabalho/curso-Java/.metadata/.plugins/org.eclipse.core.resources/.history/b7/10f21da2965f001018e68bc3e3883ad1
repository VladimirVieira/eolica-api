package br.com.ufrn.pds1.projetopds1.service;

import java.util.List;
import java.util.Map;

import br.com.ufrn.pds1.projetopds1.exception.DadosInvalidosException;

public class DadosLocalClimaUrbanoService extends DadosLocalServiceTemplate {
//*************************************************************************************************************************************************************************
	//Constroi a URL
	@Override
	public String construirUrl(String latitude, String longitude, String data) {
					
		return  String.format(
				"https://api.open-meteo.com/v1/forecast?"
				+ "latitude=%s&"
				+ "longitude=%s&"
				+ "hourly=uv_index,rain&start_date=%s&end_date=%s&timezone=America/Fortaleza"
				,latitude, longitude, data, data);
	}

//*************************************************************************************************************************************************************************
	//Método para obter dados de radiacao
	@Override
	public Double obterDadosFator1(Map<String, Object> hourly){
		
		if (hourly == null) {
			throw new DadosInvalidosException("Apresenta dados inválidos para radiacao");
		}
		
		List<Double> radiacao = (List<Double>) hourly.get("uv_index");
		return radiacao.get(9);
		//Aqui muda
	}
//************************************************************************************************************************************************************************
			//Método para obter dados de ventos do dia
				@Override
				public Double obterDadosFator2(Map<String, Object> hourly){
					
					if (hourly == null) {
						throw new DadosInvalidosException("Apresenta dados inválidos para chuvas");
					}
			        
					List<Double> chuva = (List<Double>) hourly.get("rain");
					return chuva.get(18);
					//Aqui muda
				}
}
